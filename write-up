Write a COGENT explanation, along the lines of the "Gowtham and Noelle" story in class, of how the threads take turns in this application. Explain why it may be useful to have more threads than CPU cores for this program but not for the prime finder above. 

	In the program, a web probe needed to be created a web probe that would read through a list of URLs in a file using a number of threads that the user entered. The file, urls.txt contains a list of URLs to use as examples. During the execution of the program, the user needed to enter ./webprobe urls.txt followed by two numbers to let the program know how many threads to produce in order to run the program. The first number was used to find the number of time the thread needed to access the web and the second number was needed to create the probe threads and the reporting thread. 
	At the very begnning of the program PTHREAD_MUTEX_INITIALIZER was used twice to initialize the mutexes. Next, the load_recent function was made in order to read in wwidth's mose recent times. A "for" loop was made in order to continusouly read in the most recent time as the program ran. 

	Because the instructions asked to "repeatedly cycle through the list," the only way webprobe.cpp would be terminated was through the ctrl+c option, since the program needed to run continuously.
